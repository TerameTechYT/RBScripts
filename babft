-- Dont change this!
local Build = game.Players.LocalPlayer.Backpack.BuildingTool:FindFirstChild("RF");
local Paint = game.Players.LocalPlayer.Backpack.PaintingTool:FindFirstChild("RF");
local Scale = game.Players.LocalPlayer.Backpack.ScalingTool:FindFirstChild("RF");
local InsertService = game:GetService("InsertService")
local modelId = _G.modelId
local Model = game:GetObjects('rbxassetid://'..modelId)[1]
local BlobOld = Vector3.new(-52.366, 63.225, -348.407)
local HighlightMode = _G.HighlightMode
local BlockToChoose = "WoodBlock"
local ScalePart

local MaterialList = {
	[Enum.Material.Asphalt] = "ConcreteBlock",
	[Enum.Material.Basalt] = "CoalBlock",
	[Enum.Material.Brick] = "BrickBlock",
	[Enum.Material.Cobblestone] = "StoneBlock",
	[Enum.Material.Concrete] = "ConcreteBlock",
	[Enum.Material.CorrodedMetal] = "RustedBlock",
	[Enum.Material.CrackedLava] = "ObsidianBlock",
	[Enum.Material.DiamondPlate] = "TitaniumBlock",
	[Enum.Material.Fabric] = "FabricBlock",
	[Enum.Material.Foil] = "BouncyBlock",
	[Enum.Material.ForceField] = "Glass",
	[Enum.Material.Glass] = "GoldBlock",
	[Enum.Material.Granite] = "ObsidianBlock",
	[Enum.Material.Grass] = "GrassBlock",
	[Enum.Material.Ground] = "CoalBlock",
	[Enum.Material.Ice] = "IceBlock",
	[Enum.Material.LeafyGrass] = "GrassBlock",
	[Enum.Material.Limestone] = "CoalBlock",
	[Enum.Material.Marble] = "MarbleBlock",
	[Enum.Material.Metal] = "MetalBlock",
	[Enum.Material.Mud] = "CoalBlock",
	[Enum.Material.Neon] = "NeonBlock",
	[Enum.Material.Pavement] = "ConcreteBlock",
	[Enum.Material.Pebble] = "StoneBlock",
	[Enum.Material.Plastic] = "PlasticBlock",
	[Enum.Material.Rock] = "CoalBlock",
	[Enum.Material.Salt] = "SandBlock",
	[Enum.Material.Sand] = "SandBlock",
	[Enum.Material.Sandstone] = "CoalBlock",
	[Enum.Material.Slate] = "CoalBlock",
	[Enum.Material.SmoothPlastic] = "PlasticBlock",
	[Enum.Material.Snow] = "SandBlock",
	[Enum.Material.Wood] = "SmoothWoodBlock",
	[Enum.Material.WoodPlanks] = "WoodBlock",

}

workspace.ChildAdded:Connect(function(child)
	if child:WaitForChild("Tag").Value == game.Players.LocalPlayer.Name then
		ScalePart = child
	end
end)

if HighlightMode then
	for i = 1, #_G.size do
		local whiteBase = CFrame.new(Vector3.new(6,9,-61) + _G.position[i])
		if _G.UseBlobsPos == true then
			whiteBase = CFrame.new(BlobOld + _G.position[i])
		end
		BlockToChoose = MaterialList[_G.material[i]]
		whiteBase *= CFrame.Angles(math.rad(math.abs(_G.rotation[i].X)), math.rad(math.abs(_G.rotation[i].Y)), math.rad(math.abs(_G.rotation[i].Z)))
		Build:InvokeServer(BlockToChoose, game.Players.LocalPlayer.Data:FindFirstChild(BlockToChoose).Value, workspace.WhiteZone, whiteBase, true);
		Scale:InvokeServer(ScalePart, _G.size[i], ScalePart.PPart.CFrame)
		Paint:InvokeServer({{ScalePart, _G.color[i]}})
	end
else
	for i,v in pairs(Model:GetDescendants()) do
		if v:IsA("Part") then
			local whiteBase = CFrame.new(Vector3.new(6,9,-61) + v.Position)
			if _G.UseBlobsPos == true then
				whiteBase = CFrame.new(BlobOld + v.Position)
			end
			whiteBase *= CFrame.Angles(math.rad(math.abs(v.Orientation.X)), math.rad(math.abs(v.Orientation.Y)), math.rad(math.abs(v.Orientation.Z)))
			BlockToChoose = MaterialList[v.Material]
			Build:InvokeServer(BlockToChoose, game.Players.LocalPlayer.Data:FindFirstChild(BlockToChoose).Value, workspace.WhiteZone, whiteBase, true);
			Scale:InvokeServer(ScalePart, v.Size, ScalePart.PPart.CFrame)
			Paint:InvokeServer({{ScalePart, v.Color}})
		end
	end
end


Model:Destroy()
